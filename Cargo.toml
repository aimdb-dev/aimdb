[workspace]
members = [
    "aimdb-core",
    "aimdb-embassy-adapter",
    "aimdb-tokio-adapter",
    "aimdb-macros",
    "tools/aimdb-cli",
    "examples",
]
resolver = "2"
# Note: build aimdb-core only by default. Use make all to build the full workspace!
default-members = ["aimdb-core"]

[workspace.package]
version = "0.1.0"
edition = "2021"
authors = ["AimDB Team <team@aimdb.dev>"]
license = "Apache-2.0"
repository = "https://github.com/aimdb-dev/aimdb"
homepage = "https://aimdb.dev"
description = "Async in-memory database for real-time synchronization across MCU → edge → cloud environments"
keywords = ["database", "async", "embedded", "real-time", "sync"]
categories = ["database-implementations", "embedded", "asynchronous"]

[workspace.dependencies]
# Core async runtime
tokio = { version = "1.47.1", features = ["macros", "rt-multi-thread"] }

# Serialization
serde = { version = "1.0", features = ["derive"] }

# Error handling
thiserror = "2.0.16"
anyhow = "1.0"

# Serialization - extend with error handling
serde_json = "1.0"

# Basic observability
tracing = { version = "0.1", default-features = false }

# Metrics
metrics = "0.23"

# Async utilities
futures = "0.3"

# CLI (for aimdb-cli)
clap = { version = "4.0", features = ["derive"] }

# Development dependencies
tokio-test = "0.4"
aimdb-tokio-adapter = { path = "./aimdb-tokio-adapter" }

# Embassy ecosystem for embedded async
embassy-stm32 = { version = "0.4.0", features = [
    "defmt",
    "stm32f429zi",
    "unstable-pac",
    "memory-x",
    "time-driver-tim4",
    "exti",
    "chrono",
] }
embassy-sync = { version = "0.7.2", features = ["defmt"] }
embassy-executor = { version = "0.9.0", features = [
    "arch-cortex-m",
    "executor-thread",
    "executor-interrupt",
    "defmt",
] }
embassy-time = { version = "0.5.0", features = [
    "defmt",
    "defmt-timestamp-uptime",
    "tick-hz-32_768",
] }
embassy-usb = { version = "0.5.1", features = ["defmt"] }
embassy-net = { version = "0.7.1", features = [
    "defmt",
    "tcp",
    "dhcpv4",
    "medium-ethernet",
] }
embassy-net-wiznet = { version = "0.2.1", features = ["defmt"] }
embassy-futures = { version = "0.1.2" }

# Embedded HAL for peripheral abstractions
embedded-hal = "0.2.6"
embedded-hal-async = "1.0"
embedded-hal-nb = "1.0"
embedded-hal-bus = { version = "0.2", features = ["async"] }
embedded-io = { version = "0.6.0" }
embedded-io-async = { version = "0.6.1" }

# Embedded debugging and logging
defmt = "1.0.1"
defmt-rtt = "1.0.0"
panic-halt = "0.2"

# Cortex-M
cortex-m = { version = "0.7.6", features = [
    "inline-asm",
    "critical-section-single-core",
] }
cortex-m-rt = "0.7.0"

[workspace.metadata.docs.rs]
all-features = true
rustdoc-args = ["--cfg", "docsrs"]
