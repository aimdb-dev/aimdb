[package]
name = "aimdb-core"
version.workspace = true
edition.workspace = true
license.workspace = true
description = "Core database engine for AimDB - async in-memory storage with real-time synchronization"
build = "build.rs"

[features]
default = ["std"]

# Core capabilities
std = ["thiserror", "anyhow", "serde_json", "aimdb-executor/std"]

# Heap allocation in no_std environments
alloc = ["serde"] # Enable heap in no_std

# Observability features (available on both std/no_std)
tracing = ["dep:tracing"]        # Works in both std and no_std environments
defmt = ["dep:defmt"]            # Embedded logging via probe (no_std)
metrics = ["dep:metrics", "std"] # Requires std for aggregation

# Testing features
test-utils = ["std"]

[dependencies]
# Executor traits (always available)
aimdb-executor = { path = "../aimdb-executor", default-features = false }

# Procedural macros (always available)
aimdb-macros = { path = "../aimdb-macros" }

# Serialization (optional)
serde = { workspace = true, optional = true }

# Error handling - only for std environments
thiserror = { workspace = true, optional = true }
anyhow = { workspace = true, optional = true }
serde_json = { workspace = true, optional = true }

# Atomic operations for all platforms
portable-atomic = { version = "1.9", default-features = false }

# Observability (optional)
tracing = { workspace = true, optional = true }
defmt = { workspace = true, optional = true }
metrics = { workspace = true, optional = true }

# Synchronization primitives for no_std
spin = { version = "0.9", default-features = false, features = [
    "mutex",
    "spin_mutex",
] }

[dev-dependencies]
# For no_std testing
heapless = "0.9.1"
# For async testing
tokio = { workspace = true, features = ["macros", "rt", "time"] }
